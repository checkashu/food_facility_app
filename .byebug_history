c
ApplicationPresenter.delete_entry(params['objectid'])
p params
exit
c
p application[:expirationdate]
p application[:address]
p application[:status]
p application[:applicant]
p application
c
p ApplicationPresenter.index(name_substring)
exit
p ApplicationPresenter.index(name_substring)
p name_substring
c
q
p application.save
p application.to
p application.from
p application.applicant_name
p application.is_a?(Application)
p application
q
application.is_expired
p application.expiration_date
p application
p application.applicant_name
p application.applicant
q
json_response.map {|r| r unless r.key?("cnn")}
json_response.map {|r| r['cnn'] unless r.key?("cnn")}
json_response.map {|r| r['cnn'] unless r.key?("locationdescription")}
p json_response.map {|r| r['cnn'] unless r.key?("locationdescription")}
p json_response.size
p json_response.map {|r| r unless r.key?("locationdescription")}
p json_response
n
exit
exi
p JSON.parse(response.response_body).map {|r| r["locationdescription"] if r["locationdescription"].split("to").size != 2}
JSON.parse(response.response_body).first["locationdescription"]
JSON.parse(response.response_body).first["applicant"]
JSON.parse(response.response_body).first["address"]
JSON.parse(response.response_body).first
p JSON.parse(response.response_body)[0]
quit
p JSON.parse(response.response_body).is_a?(Array)
p JSON.parse(response.response_body)
q
p response.response_body
p response.response_body.is_a?(Hash)
p response.response_body.is_a?Hash)
p response.response_body.is_a?(Array)
